{"version":3,"sources":["Components/Firebase.js","Components/Auth/sign.js","Components/Delete/Delete.js","Components/TodoItems/todoItems.js","Components/AddItems/addItems.js","Components/FilterElements/FilterElements.js","Components/logedin/loggedin.js","Components/Auth/admin.js","Components/nav.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Sign","auth","provider","FacebookAuthProvider","hsndelSignin","signInWithPopup","then","result","user","console","log","ThemeProvider","CSSReset","Flex","as","onClick","this","backgroundColor","size","color","borderRadius","width","alignItems","px","justifyContent","fontSize","fontWeight","height","m","mt","Icon","className","Component","Delete","props","id","deleteItem","React","useState","isOpen","setIsOpen","onClose","cancelRef","useRef","IconButton","w","h","p","icon","variantColor","AlertDialog","leastDestructiveRef","Button","ref","ml","TodoItems","items","handelDateSort","handelNameSort","itemDone","handlefilter","ListItems","length","map","item","key","done","py","border","borderRight","borderTop","borderColor","task","date","time","Set","tags","tag","Tag","href","Math","random","textAlgin","AddItems","state","handelChange","e","setState","target","value","handelSave","preventDefault","alert","addItem","Box","mx","textAlign","onSubmit","Input","type","placeholder","onChange","FilterElements","filter","filterSearch","ListTags","allTags","label","mb","options","isMulti","mr","Loggedin","firestore","collection","tasks_tags","unsubscribe","tags_unsubscribe","currentitems","onCollectionUpdate","querySnapshot","forEach","doc","onAuthStateChanged","tag_id_arr","tags_arr","data","assignTo","uid","where","get","snapshot","push","tag_id","includes","onCollectionUpdateTags","tagsid","test","previousState","onSnapshot","delete","task_id","update","_","sortBy","getTags","split","add","task_tag","i","loop","val","tag_name","text","substring","x","searchTags","arr","items2","kk","catch","error","Heading","Nav","handelLagout","users","Menu","bg","_hover","_expanded","_active","_focus","outline","boxShadow","displayName","App","checkUser","signOut","uploader","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28ebbef9.chunk.js","sourcesContent":["\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCF3fyTJkdvIG9ne8V7KCCNIF9M9XjYLXg\",\r\n    authDomain: \"todo-2612d.firebaseapp.com\",\r\n    databaseURL: \"https://todo-2612d.firebaseio.com\",\r\n    projectId: \"todo-2612d\",\r\n    storageBucket: \"todo-2612d.appspot.com\",\r\n    messagingSenderId: \"386250605586\",\r\n    appId: \"1:386250605586:web:643807c61b0c73fa2d04cb\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { Component } from 'react';\r\nimport { ThemeProvider, CSSReset, Icon, Flex } from \"@chakra-ui/core\";\r\nimport firebase from '../Firebase'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\n\r\n\r\nexport class Sign extends Component {\r\n\r\n    auth = firebase.auth()\r\n    provider = new firebase.auth.FacebookAuthProvider();\r\n    hsndelSignin = () => {\r\n        this.auth.signInWithPopup(this.provider).then(function (result) {\r\n            var user = result.user;\r\n            console.log(user)\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <ThemeProvider>\r\n                <CSSReset />\r\n                <Flex as=\"button\"\r\n                    onClick={this.hsndelSignin}\r\n                    backgroundColor=\"#3b5998\"\r\n                    size=\"lg\" color=\"#fff\"\r\n                    borderRadius=\"60px\"\r\n                    width=\"250px\"\r\n                    alignItems=\"center\"\r\n                    px=\"35px\"\r\n                    justifyContent=\"space-between\"\r\n                    fontSize=\"25px\"\r\n                    fontWeight=\"bold\"\r\n                    height=\"50px\"\r\n                    m=\"auto\"\r\n                    mt=\"250px\"\r\n                >\r\n                    Signin With <Icon as=\"i\" className=\"fa fa-facebook-square\" fontSize=\"25px\"></Icon >\r\n                </Flex>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sign;\r\n","import React from 'react';\r\nimport {\r\n    AlertDialog,\r\n    AlertDialogBody,\r\n    AlertDialogFooter,\r\n    AlertDialogHeader,\r\n    AlertDialogContent,\r\n    AlertDialogOverlay,\r\n    IconButton,\r\n    Button\r\n} from \"@chakra-ui/core\";\r\n\r\nfunction Delete(props) {\r\n    const { id, deleteItem } = props;\r\n    const [isOpen, setIsOpen] = React.useState();\r\n    const onClose = () => setIsOpen(false);\r\n    const cancelRef = React.useRef();\r\n\r\n\r\n    return (\r\n        <>\r\n            <IconButton w=\"45px\" h=\"45px\" p=\"0\" icon=\"close\" size=\"lg\" fontSize=\"20px\" variantColor=\"red\" onClick={() => setIsOpen(true)} />\r\n\r\n            <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n            >\r\n                <AlertDialogOverlay />\r\n                <AlertDialogContent>\r\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                        Delete Customer\r\n            </AlertDialogHeader>\r\n\r\n                    <AlertDialogBody>\r\n                        Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n                    <AlertDialogFooter>\r\n                        <Button ref={cancelRef} onClick={onClose}>\r\n                            Cancel\r\n              </Button>\r\n                        <Button variantColor=\"red\" onClick={() => deleteItem(id)} ml={3}>\r\n                            Delete\r\n              </Button>\r\n                    </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n            </AlertDialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Delete;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Delete from '../Delete/Delete';\r\n\r\nimport { Flex, IconButton, Tag } from \"@chakra-ui/core\";\r\n\r\nclass TodoItems extends Component {\r\n\r\n    render() {\r\n        const { items, handelDateSort, handelNameSort, itemDone, handlefilter } = this.props;\r\n        let count = items.length\r\n        let ListItems = count ? (\r\n            items.map(item => {\r\n\r\n\r\n                // item.tags.map(a => {\r\n                //     console.log(a);\r\n                // });\r\n                // for (let i = 0; i < 4; i++) {\r\n                //     console.log(item.tags[i]);\r\n\r\n                // }\r\n\r\n                return (\r\n                    <Flex fontSize=\"lg\" fontWeight=\"medium\" key={item.key} className={item.done ? \"done\" : \"undone\"}>\r\n\r\n                        <Flex py=\"7px\" border=\"1px\" borderRight=\"0\" borderTop=\"0\" borderColor=\"gray.200\" w=\"20%\" h=\"50px\" alignItems=\"center\" justifyContent=\"center\" className=\"task\">{item.task}</Flex>\r\n                        <Flex py=\"7px\" border=\"1px\" borderRight=\"0\" borderTop=\"0\" borderColor=\"gray.200\" w=\"20%\" h=\"50px\" alignItems=\"center\" justifyContent=\"center\" className=\"date\">{item.date}</Flex>\r\n                        <Flex py=\"7px\" border=\"1px\" borderRight=\"0\" borderTop=\"0\" borderColor=\"gray.200\" w=\"20%\" h=\"50px\" alignItems=\"center\" justifyContent=\"center\" className=\"time\">{item.time}</Flex>\r\n                        <Flex py=\"7px\" border=\"1px\" borderRight=\"0\" borderTop=\"0\" borderColor=\"gray.200\" w=\"30%\" h=\"50px\" alignItems=\"center\" justifyContent=\"center\" className=\"tags\" id=\"tags\">\r\n                            {\r\n                                [...new Set(item.tags)].map(tag => {\r\n                                    return (\r\n                                        <Tag as=\"a\" onClick={handlefilter} href=\"#!\" key={Math.random()} ml=\"5px\">#{tag}</Tag>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </Flex>\r\n                        <Flex py=\"7px\" border=\"1px\" borderTop=\"0\" borderColor=\"gray.200\" w=\"10%\" h=\"50px\" alignItems=\"center\" justifyContent=\"space-around\">\r\n                            <IconButton size=\"lg\" fontSize=\"20px\" w=\"45px\" h=\"45px\" variantColor=\"green\" icon=\"check\" onClick={() => itemDone(item.key)} />\r\n                            {/* <span className=\"action icon\" onClick={() => itemDone(item.id)}><i className=\"fa fa-check\"></i></span> */}\r\n                            <Delete id={item.key} items={items} deleteItem={this.props.deleteItem} />\r\n                        </Flex>\r\n                    </Flex>\r\n                )\r\n            })\r\n        ) : (\r\n                <Flex textAlgin=\"center\" alignItems=\"center\" justifyContent=\"space-around\" color=\"#e53e3e\" fontSize=\"20px\" fontWeight=\"bold\"> There is No Tasks To Show </Flex>\r\n            )\r\n        return (\r\n\r\n            <div className=\"ListItems\">\r\n\r\n                <Flex fontSize=\"xl\" fontWeight=\"bold\">\r\n                    <Flex border=\"1px\" borderRight=\"0\" borderColor=\"gray.200\" w=\"20%\" h=\"50px\" alignItems=\"center\" justifyContent=\"center\" className=\"task title\" onClick={handelNameSort}>Task</Flex>\r\n                    <Flex border=\"1px\" borderRight=\"0\" borderColor=\"gray.200\" w=\"20%\" h=\"50px\" alignItems=\"center\" justifyContent=\"center\" className=\"date title\" onClick={handelDateSort} > Date </Flex>\r\n                    <Flex border=\"1px\" borderRight=\"0\" borderColor=\"gray.200\" w=\"20%\" h=\"50px\" alignItems=\"center\" justifyContent=\"center\" className=\"time title\">Time</Flex>\r\n                    <Flex border=\"1px\" borderRight=\"0\" borderColor=\"gray.200\" w=\"30%\" h=\"50px\" alignItems=\"center\" justifyContent=\"center\" className=\"tags title\" id=\"tags\">Tags</Flex>\r\n                    <Flex border=\"1px\" borderColor=\"gray.200\" w=\"10%\" h=\"50px\" alignItems=\"center\" justifyContent=\"center\" className=\"action title\">Action</Flex>\r\n                </Flex>\r\n                {ListItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItems;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    ThemeProvider,\r\n    CSSReset,\r\n    Box,\r\n    Input,\r\n    Flex,\r\n    Button\r\n} from \"@chakra-ui/core\";\r\n\r\n\r\nexport class AddItems extends Component {\r\n    state = {\r\n        task: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n        tags: [],\r\n        done: false\r\n    }\r\n    handelChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n\r\n    }\r\n    handelSave = (e) => {\r\n        e.preventDefault();\r\n        //console.log(unique);\r\n        if (this.state.task === \"\" || this.state.date === \"\") {\r\n            alert(\"Fill The Data \")\r\n        } else {\r\n            this.props.addItem(this.state)\r\n            this.setState({\r\n                task: \"\",\r\n                date: \"\",\r\n                time: \"\",\r\n                tags: [],\r\n                done: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeProvider>\r\n                <CSSReset />\r\n                <Box mt=\"25px\" mx=\"auto\" textAlign=\"center\">\r\n                    <Flex as=\"form\" onSubmit={this.handelSave}>\r\n                        <Input type=\"text\" placeholder=\"Enter Task ....\" id=\"task\" onChange={this.handelChange} value={this.state.task} />\r\n                        <Input ml=\"15px\" type=\"date\" placeholder=\"Enter Date ....\" id=\"date\" onChange={this.handelChange} value={this.state.date} />\r\n                        <Input ml=\"15px\" type=\"time\" placeholder=\"Enter time ....\" id=\"time\" onChange={this.handelChange} value={this.state.time} />\r\n                        <Input ml=\"15px\" as=\"input\" type=\"text\" placeholder=\"Enter tags ....\" id=\"tags\" onChange={this.handelChange} value={this.state.tags} />\r\n                        <Button w=\"150px\" ml=\"15px\" variantColor=\"blue\" type=\"submit\">Add</Button>\r\n                    </Flex>\r\n                </Box>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddItems;\r\n","import React from 'react';\r\nimport { ThemeProvider, CSSReset, Button, Flex } from \"@chakra-ui/core\";\r\nimport Select from 'react-select'\r\n\r\nconst FilterElements = (props) => {\r\n    const { filter, filterSearch, allTags } = props;\r\n    let ListTags = allTags.map((label) => {\r\n        let key = label.key;\r\n        let val = label.tag;\r\n        return (\r\n            { label: val, value: key }\r\n        )\r\n    });\r\n\r\n    // let handleChange = (e) => {\r\n    //     console.log(e.label);\r\n    // };\r\n\r\n    return (\r\n        <ThemeProvider>\r\n            <CSSReset />\r\n\r\n            <Flex alignItems=\"center\" mb=\"25px\" justifyContent=\"space-between\" className=\"filters-cont\">\r\n                <Flex as=\"form\">\r\n                    <Select options={ListTags} id=\"select\" className=\"filterInput\" onChange={filterSearch} isMulti placeholder=\"tags\" />\r\n                </Flex>\r\n                <Flex className=\"filters\">\r\n                    <Button as=\"button\" px=\"20px\" mr=\"15px\" h=\"40px\" fontSize=\"18px\" variantColor=\"green\" id=\"all\" onClick={filter} >All</Button>\r\n                    <Button as=\"button\" px=\"20px\" mr=\"15px\" h=\"40px\" fontSize=\"18px\" variantColor=\"green\" id=\"done\" onClick={filter} >done</Button>\r\n                    <Button as=\"button\" px=\"20px\" h=\"40px\" fontSize=\"18px\" variantColor=\"green\" id=\"undone\" onClick={filter} >undone</Button>\r\n                </Flex>\r\n            </Flex>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default FilterElements;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport TodoItems from '../TodoItems/todoItems';\r\nimport AddItems from '../AddItems/addItems';\r\nimport FilterElements from '../FilterElements/FilterElements';\r\nimport firebase from '../Firebase'\r\nimport { ThemeProvider, CSSReset, Box, Heading } from \"@chakra-ui/core\";\r\n\r\n\r\nclass Loggedin extends Component {\r\n\r\n    ref = firebase.firestore().collection('tasks');\r\n    tags = firebase.firestore().collection('tags');\r\n    tasks_tags = firebase.firestore().collection('tasks_tags');\r\n    auth = firebase.auth()\r\n    unsubscribe = null;\r\n    tags_unsubscribe = null;\r\n    state = {\r\n        items: [],\r\n        currentitems: [],\r\n        allTags: []\r\n    }\r\n    ///////////\r\n    onCollectionUpdate = (querySnapshot) => {\r\n        let items = [];\r\n\r\n        querySnapshot.forEach((doc) => {\r\n\r\n            this.auth.onAuthStateChanged((user) => {\r\n                let tag_id_arr = [];\r\n                let tags_arr = [];\r\n                const { task, date, time, done, assignTo } = doc.data();\r\n                if (assignTo === user.uid) {\r\n                    //join table\r\n                    this.tasks_tags.where('task_id', '==', doc.id).get().then((snapshot) => {\r\n                        snapshot.forEach(doc => {\r\n                            tag_id_arr.push(doc.data().tag_id);\r\n                        });\r\n                        this.tags.get().then((snapshot) => {\r\n\r\n                            snapshot.forEach(doc => {\r\n\r\n                                if (tag_id_arr.includes(doc.id)) {\r\n\r\n                                    tags_arr.push(doc.data().tag);\r\n                                }\r\n                            });\r\n                        }).then(() => {\r\n                            //join table\r\n                            items.push({\r\n                                key: doc.id,\r\n                                doc, // DocumentSnapshot\r\n                                task,\r\n                                date,\r\n                                time,\r\n                                tags: tags_arr,\r\n                                done,\r\n                            });\r\n                            this.setState({ items })\r\n                        });\r\n                    })\r\n                }\r\n            })\r\n        });\r\n\r\n    }\r\n    ///////////\r\n    onCollectionUpdateTags = (querySnapshot) => {\r\n        let allTags = [];\r\n        let tagsid = [];\r\n        this.tasks_tags.get().then((snapshot) => {\r\n            snapshot.forEach(doc => {\r\n                tagsid.push(doc.data().tag_id);\r\n            });\r\n        }).then(() => {\r\n            querySnapshot.forEach((doc) => {\r\n                const { tag } = doc.data();\r\n                if (tagsid.includes(doc.id)) {\r\n                    allTags.push({\r\n                        key: doc.id,\r\n                        doc, // DocumentSnapshot\r\n                        tag,\r\n                    });\r\n                }\r\n\r\n            });\r\n            this.setState({\r\n                allTags\r\n            });\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n    ///////////\r\n    ///////////\r\n    componentDidMount() {\r\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n        this.tags_unsubscribe = this.tags.onSnapshot(this.onCollectionUpdateTags);\r\n        this.test()\r\n    }\r\n    ///////////\r\n    test = () => {\r\n        let items = this.state.items;\r\n        let currentitems = this.state.currentitems;\r\n        items.map(item => {\r\n            currentitems.push(item);\r\n            return 1;\r\n        });\r\n        this.setState({ currentitems })\r\n    }\r\n    ///////////\r\n    previousState = () => {\r\n        this.tags_unsubscribe = this.tags.onSnapshot(this.onCollectionUpdateTags);\r\n        let items = this.ref.onSnapshot(this.onCollectionUpdate);\r\n        this.setState({ items })\r\n    }\r\n    ///////////\r\n    deleteItem = (id) => {\r\n        this.ref.doc(id).delete();\r\n        this.tasks_tags.get().then((snapshot) => {\r\n            snapshot.forEach(doc => {\r\n                if (doc.data().task_id === id) {\r\n                    this.tasks_tags.doc(doc.id).delete()\r\n                    this.tags.doc(doc.data().tag_id).delete()\r\n                }\r\n            });\r\n        });\r\n        console.log(id);\r\n        this.previousState()\r\n    }\r\n    ///////////\r\n    itemDone = (id) => {\r\n        this.ref.get().then((snapshot) => {\r\n            snapshot.forEach(doc => {\r\n                if (doc.id === id && doc.data().done === true) {\r\n                    this.ref.doc(id).update({ done: false })\r\n                } else if (doc.id === id && doc.data().done === false) {\r\n                    this.ref.doc(id).update({ done: true })\r\n                }\r\n            });\r\n        });\r\n    }\r\n    ///////////\r\n    handelDateSort = () => {\r\n        let items = _.sortBy(this.state.items, ['date']);\r\n        this.setState({ items })\r\n    }\r\n    ///////////\r\n    handelNameSort = () => {\r\n        let items = _.sortBy(this.state.items, ['task']);\r\n        this.setState({ items })\r\n    }\r\n    ///////////\r\n    addItem = (item) => {\r\n        let getTags = item.tags.split(', '); // split string on comma space\r\n\r\n\r\n\r\n        getTags.forEach(tag => {\r\n            this.tags.add({ tag: tag })\r\n\r\n        });\r\n\r\n        this.auth.onAuthStateChanged((user) => {\r\n            this.ref.add({\r\n                task: item.task,\r\n                date: item.date,\r\n                time: item.time,\r\n                done: item.done,\r\n                assignTo: user.uid\r\n            });\r\n        })\r\n\r\n\r\n\r\n        ////////////////////////tasks_tags////////////////\r\n        let task_tag = []\r\n        this.ref.where('task', '==', item.task).get().then((snapshot) => {\r\n            snapshot.forEach(doc => {\r\n                task_tag.push(doc.id);\r\n            });\r\n        }).then(() => {\r\n            this.tags.where('tag', 'in', getTags).get().then((snapshot) => {\r\n                snapshot.forEach(doc => {\r\n                    task_tag.push(doc.id);\r\n                });\r\n            }).then(() => {\r\n                for (let i = 1; i < task_tag.length; i++) {\r\n                    this.tasks_tags.add({\r\n                        tag_id: task_tag[i],\r\n                        task_id: task_tag[0],\r\n                    });\r\n                    // console.log(\"task_id\" + task_tag[0] + \" , \" + \"tag_id\" + task_tag[i]);\r\n                }\r\n            }).then(() => {\r\n                this.previousState();\r\n            });\r\n        });\r\n\r\n    }\r\n    ///////////\r\n    loop = (key, val) => {\r\n        this.ref = firebase.firestore().collection('tasks').where(key, '==', val);\r\n        let items = this.ref.onSnapshot(this.onCollectionUpdate);\r\n        this.setState({ items })\r\n    }\r\n    ///////////\r\n    filter = (e) => {\r\n        let targetId = e.target.id;\r\n        switch (targetId) {\r\n            case \"all\":\r\n                this.previousState();\r\n\r\n                break;\r\n            case \"done\":\r\n                this.loop('done', true)\r\n                break;\r\n            case \"undone\":\r\n                this.loop('done', false)\r\n                break;\r\n            default:\r\n                return 1;\r\n        }\r\n    }\r\n    ///////////\r\n    handlefilter = (e) => {\r\n        let tag_name = e.target.text.substring(1);\r\n        let x = []\r\n        this.tags.where('tag', '==', tag_name).get().then((snapshot) => {\r\n            snapshot.forEach(doc => {\r\n                x.push(doc.id);\r\n            });\r\n            console.log(x)\r\n            this.searchTags(x)\r\n        });\r\n    }\r\n    ///////////\r\n    filterSearch = (e) => {\r\n        if (e != null) {\r\n\r\n            let x = _.map(e, 'value');\r\n            this.searchTags(x)\r\n            // console.log(x);\r\n        } else {\r\n            this.previousState();\r\n        }\r\n    }\r\n    ///////////\r\n    searchTags = (val) => {\r\n        let arr = [];\r\n        let items = this.state.items;\r\n        let items2 = [];\r\n        this.tasks_tags.where('tag_id', 'in', val).get().then((snapshot) => {\r\n            snapshot.forEach(doc => {\r\n                arr.push(doc.data().task_id);\r\n            });\r\n            items.forEach(kk => {\r\n                if (arr.includes(kk.key)) {\r\n                    console.log(kk);\r\n                    console.log(kk.key);\r\n                    items2.push(kk);\r\n                }\r\n            });\r\n            this.setState({ items: items2 })\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n    }\r\n    ///////////////////////////////////////////////////////\r\n    render() {\r\n        return (\r\n            <ThemeProvider>\r\n                <CSSReset />\r\n                <Box w=\"90%\" mx=\"auto\" >\r\n                    <Heading mt=\"25px\" className=\"text-center\" textAlign=\"center\">Add Item</Heading>\r\n                    <Box className=\"content\">\r\n                        <AddItems addItem={this.addItem} />\r\n                    </Box>\r\n\r\n                    <Box className=\"content\">\r\n                        <Heading mt=\"25px\" className=\"text-center\" textAlign=\"center\">Todo List</Heading>\r\n                        <FilterElements filter={this.filter} filterSearch={this.filterSearch} allTags={this.state.allTags} />\r\n                        <TodoItems items={this.state.items} handlefilter={this.handlefilter} deleteItem={this.deleteItem} itemDone={this.itemDone} handelDateSort={this.handelDateSort} handelNameSort={this.handelNameSort} />\r\n                    </Box>\r\n                </Box>\r\n            </ThemeProvider>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Loggedin;\r\n\r\n","import React, { Component } from 'react';\r\nimport {\r\n    ThemeProvider,\r\n    CSSReset,\r\n    Box,\r\n    Input,\r\n    Flex,\r\n    Button, Heading\r\n} from \"@chakra-ui/core\";\r\nimport firebase from '../Firebase'\r\nimport Loggedin from '../logedin/loggedin'\r\n\r\n\r\nexport class admin extends Component {\r\n    auth = firebase.auth()\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n    }\r\n    handelChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handelSave = (e) => {\r\n        e.preventDefault();\r\n        this.auth.signInWithEmailAndPassword(this.state.email, this.state.password)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeProvider>\r\n                <CSSReset />\r\n                <Box w=\"25%\" mt=\"100px\" mx=\"auto\" textAlign=\"center\">\r\n                    <Heading mb=\"35px\" className=\"text-center\" textAlign=\"center\">Sign As Admin</Heading>\r\n                    <Flex as=\"form\" onSubmit={this.handelSave} flexDirection=\"column\">\r\n                        <Input type=\"email\" placeholder=\"Enter Email ....\" id=\"email\" onChange={this.handelChange} value={this.state.email} />\r\n                        <Input my=\"20px\" type=\"password\" placeholder=\"Enter Password ....\" id=\"password\" onChange={this.handelChange} value={this.state.password} />\r\n                        <Button w=\"150px\" mx=\"auto\" variantColor=\"blue\" type=\"submit\">Login</Button>\r\n                    </Flex>\r\n                </Box>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default admin;\r\n","import React from 'react';\r\nimport {\r\n    ThemeProvider,\r\n    CSSReset,\r\n    Flex,\r\n    Heading,\r\n    Menu,\r\n    MenuButton,\r\n    MenuList,\r\n    MenuItem,\r\n    Button\r\n} from \"@chakra-ui/core\";\r\n\r\n\r\n\r\nconst Nav = (props) => {\r\n    const { user, handelLagout } = props;\r\n\r\n\r\n\r\n    let users = user ? (\r\n        <Menu>\r\n            <MenuButton as={Button} bg=\"transparent\"\r\n                _hover={{ bg: \"transparent\" }}\r\n                _expanded={{ bg: \"transparent\" }}\r\n                _active={{ bg: \"transparent\" }}\r\n                _focus={{ outline: 0, boxShadow: \"0\", bg: \"transparent\" }}>\r\n                <Heading size=\"lg\"> {user.displayName}</Heading>\r\n            </MenuButton>\r\n            <MenuList>\r\n                <MenuItem as=\"button\" onClick={handelLagout}>Logout</MenuItem>\r\n            </MenuList>\r\n        </Menu>\r\n    ) : (\r\n            // <a href=\"/admin\">Sign As Admin</a>\r\n            <Flex></Flex>\r\n        )\r\n    return (\r\n        <ThemeProvider>\r\n            <CSSReset />\r\n            <Flex alignItems=\"center\" justifyContent=\"space-between\" mx=\"auto\" backgroundColor=\"#f8f9fa\" p=\"5px 50px\">\r\n                <Heading size=\"2xl\" className=\"logo\" color=\"rgba(0,0,0,0.9)\">Todo App</Heading>\r\n\r\n                <ThemeProvider>\r\n                    {users}\r\n                </ThemeProvider>\r\n            </Flex>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\nimport './App.css'\nimport Sign from './Components/Auth/sign';\nimport admin from './Components/Auth/admin';\nimport Loggedin from './Components/logedin/loggedin';\nimport firebase from './Components/Firebase'\nimport Nav from './Components/nav';\nimport { Route, BrowserRouter } from 'react-router-dom'\n\n//import { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\n\n\nclass App extends Component {\n  ///////////////////////////////////////////////////////\n  auth = firebase.auth()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: null\n    }\n  }\n\n  checkUser = () => {\n    this.auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user.uid);\n\n        this.setState({ user })\n      } else {\n        this.setState({ user })\n      }\n    })\n  }\n  componentDidMount() {\n    this.checkUser();\n  }\n  handelLagout = () => {\n    firebase.auth().signOut().then(function () {\n      this.checkUser();\n    }).catch(function (error) {\n      // An error happened.\n    });\n  }\n  render() {\n    let uploader = this.state.user ?\n      <Route exact path=\"/\" component={Loggedin} /> : <Route exact path=\"/\" component={Sign} />\n\n    return (\n      <>\n        <Nav user={this.state.user} handelLagout={this.handelLagout} />\n        <BrowserRouter>\n          {uploader}\n\n        </BrowserRouter>\n\n      </>\n    );\n\n  }\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}